{"ast":null,"code":"\"use strict\";\n\n// import { Pipe, PipeTransform } from '@angular/core';\n// @Pipe({\n//   name: 'filter'\n// })\n// export class FilterPipe implements PipeTransform {\n//   transform(value: any[], filterString: string, propName: string): any[] {\n//     const result : any[] = [];\n//     if(!value || filterString === '' || propName === '') {\n//       return value;\n//     }\n//     value.forEach((a: any) => {\n//       if(a[propName].trim().toLowerCase().includes(filterString.toLowerCase())) {\n//         result.push(a)\n//       }\n//     });\n//     return result;\n//   }\n// }","map":{"version":3,"names":[],"sources":["D:\\Projects\\MovieMarvels\\src\\app\\sharedPipe\\filter.pipe.ts"],"sourcesContent":["// import { Pipe, PipeTransform } from '@angular/core';\n\n// @Pipe({\n//   name: 'filter'\n// })\n// export class FilterPipe implements PipeTransform {\n\n//   transform(value: any[], filterString: string, propName: string): any[] {\n//     const result : any[] = [];\n//     if(!value || filterString === '' || propName === '') {\n//       return value;\n//     }\n//     value.forEach((a: any) => {\n//       if(a[propName].trim().toLowerCase().includes(filterString.toLowerCase())) {\n//         result.push(a)\n//       }\n//     });\n//     return result;\n//   }\n\n// }\n"],"mappings":";;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"script","externalDependencies":[]}